name: update_cloudflare_dns_record

description: This action creates or updates a record in a provided DNS zone on Cloudflare.

inputs:
  CF_API_TOKEN:
    description: 'Cloudflare API token'
    required: true
    type: string
  CF_ZONE_ID:
    description: 'Cloudflare DNS Zone ID'
    required: true
    type: string
  PROXIED:
    description: 'Set to true to enable Cloudflare proxy'
    required: false
    type: string
    default: "false"
  RECORD_NAME:
    description: 'DNS record name (e.g., subdomain.example.com)'
    required: true
    type: string
  RECORD_TYPE:
    description: 'DNS record type (e.g., A, CNAME, TXT)'
    required: true
    type: string
  RECORD_VALUE:
    description: 'DNS record value (e.g., 192.0.2.1, domain.com)'
    required: true
    type: string
  TTL:
    description: 'TTL value for DNS record in seconds'
    required: false
    type: string
    default: "1" # TTL=1 sets TTL to "Auto"

runs:
  using: composite
  steps:
    - name: Get record ID
      id: get-record
      shell: bash
      run: |
        curl -s \
          -H "Authorization: Bearer ${{ inputs.CF_API_TOKEN }}" \
          -H "Content-Type: application/vnd.api+json" \
          "https://api.cloudflare.com/client/v4/zones/${{ inputs.CF_ZONE_ID }}/dns_records?name=${{ inputs.RECORD_NAME }}" | \
          jq -r '.result[0].id // empty' | \
          awk '{print "RECORD_ID="$0}' >> GITHUB_ENV
    - name: Create or update DNS record
      shell: bash
      run: |
        if [ -n "${{ env.$RECORD_ID }}" ]; then
          echo "Updating existing DNS record with ID: ${{ env.RECORD_ID }}"
          curl -s \
            -H "Authorization: Bearer ${{ inputs.CF_API_TOKEN }}" \
            -H "Content-Type: application/vnd.api+json" \
            -X PUT "https://api.cloudflare.com/client/v4/zones/${{ inputs.CF_ZONE_ID }}/dns_records/${{ env.RECORD_ID }}" \
            --data "{\"type\":\"${{ inputs.RECORD_TYPE }}\",\"name\":\"${{ inputs.RECORD_NAME }}\",\"content\":\"${{ inputs.RECORD_VALUE }}\",\"ttl\":${{ inputs.TTL }},\"proxied\":${{ inputs.PROXIED }}}"
        else
          echo "Creating new DNS record"
          curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${{ inputs.CF_ZONE_ID }}/dns_records" \
            -H "Authorization: Bearer ${{ inputs.CF_API_TOKEN }}" \
            -H "Content-Type: application/vnd.api+json" \
            --data "{\"type\":\"${{ inputs.RECORD_TYPE }}\",\"name\":\"${{ inputs.RECORD_NAME }}\",\"content\":\"${{ inputs.RECORD_VALUE }}\",\"ttl\":${{ inputs.TTL }},\"proxied\":${{ inputs.PROXIED }}}"
        fi
    - name: DNS update result
      shell: bash
      run: |
        RESULT=$(curl -s \
          -H "Authorization: Bearer ${{ inputs.CF_API_TOKEN }}" \
          -H "Content-Type: application/vnd.api+json") \
          "https://api.cloudflare.com/client/v4/zones/${{ inputs.CF_ZONE_ID }}/dns_records?name=${{ inputs.RECORD_NAME }}")
        echo "DNS Update Response: "
        echo "$RESULT" | jq .
